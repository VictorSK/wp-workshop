#!/usr/bin/env ruby
#frozen_string_literal: true

# Export data from dev, live, or staging WordPress database.
# To use, run this script from project root directory and specify mode for exporting data from using:
#
# $ bin/export [dev|live|staging] [options]
#
# For usage options, use the --help flag.

require 'optparse'
require 'yaml'

# Edit CONFIG params in config/config.rb
require './config/config.rb'

module WPWorkshop
  class Export
    def initialize(mode)
      @options = {
        mode: mode, # "dev" or "live" or "staging"
        simulate: false
      }

      OptionParser.new do |opts|
        opts.banner = 'Usage: bin/export [dev|live|staging] [options]'
        opts.on('-s', '--simulate', 'Output command simulated, not executed.') { @options[:simulate] = true }
      end.parse!

      case mode
      when 'dev'
        export_dev
      when 'live'
        export_live
      when 'staging'
        export_staging
      else
        raise ArgumentError, "Invalid mode specified. Use 'dev' or 'live' or 'staging'."
      end
    end

    def export_dev
      cmd = "docker exec -i $(docker-compose ps -q db) sh -c 'exec mysqldump -u root -p\"$MYSQL_ROOT_PASSWORD\" \"$MYSQL_DATABASE\"' > #{CONFIG[:database][:dev_path]}/#{CONFIG[:database][:dev_dump]}"

      if @options[:simulate]
        puts 'dev database export command to be executed... (OUTPUTTED WITHOUT EXECUTE)'
        puts cmd
        puts "\nReview outputted command thoroughly before running export command."
        puts
      else
        puts 'Exporting dev WordPress database...'
        system(cmd) unless @options[:simulate]
        puts "\ndev database export completed."
        puts
      end
    end

    def export_live
      cmd = "ssh #{CONFIG[:remote][:user]}@#{CONFIG[:remote][:host]} 'cd #{CONFIG[:remote][:live_path]};wp db export #{CONFIG[:database][:remote_path]}/#{CONFIG[:database][:live_dump]}'"

      if @options[:simulate]
        puts 'Remote database export command to be executed... (OUTPUTTED WITHOUT EXECUTE)'
        puts cmd
        puts "\nReview outputted command thoroughly before running export command."
        puts
      else
        puts 'Exporting remote live WordPress database...'
        system(cmd) unless @options[:simulate]
        puts "\nRemote live database export completed."
        puts
      end
    end

    def export_staging
      cmd = "ssh #{CONFIG[:remote][:user]}@#{CONFIG[:remote][:host]} 'cd #{CONFIG[:remote][:staging_path]};wp db export #{CONFIG[:database][:remote_path]}/#{CONFIG[:database][:staging_dump]}'"

      if @options[:simulate]
        puts 'Remote database export command to be executed... (OUTPUTTED WITHOUT EXECUTE)'
        puts cmd
        puts "\nReview outputted command thoroughly before running export command."
        puts
      else
        puts 'Exporting remote staging WordPress database...'
        system(cmd) unless @options[:simulate]
        puts "\nRemote staging database export completed."
        puts
      end
    end
  end
end

# Check if the mode argument is passed and is either "dev" or "live" or "staging"
if ARGV.empty? || !%w[dev live staging].include?(ARGV[0])
  puts "You must specify 'dev' or 'live' or 'staging' to run this script."
  puts "Usage: bin/export [dev|live|staging] [options]"
  puts
else
  WPWorkshop::Export.new(ARGV[0])
end
